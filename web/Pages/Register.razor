@page "/register"
@using Szakdolgozat.Data

<EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstNameInput">First Name</label>
        <InputText class="form-control" id="firstNameInput" @bind-Value="user.FirstName" />
    </div>

    <div class="form-group">
        <label for="lastNameInput">Last Name</label>
        <InputText class="form-control" id="lastNameInput" @bind-Value="user.LastName" />
    </div>

    <div class="form-group">
        <label for="emailInput">Email</label>
        <InputText class="form-control" id="emailInput" @bind-Value="user.Email" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>

    <div class="form-group">
        <label for="passwordInput">Password</label>
        <InputText class="form-control" id="passwordInput" type="password" @bind-Value="user.Password" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>

    <div class="form-group">
        <label for="phoneNumberInput">Phone Number</label>
        <InputText class="form-control" id="phoneNumberInput" @bind-Value="user.PhoneNumber" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private User user = new User();
    private bool registrationFailed = false;

    [Inject]
    private UserService userService { get; set; }

    private async Task HandleValidSubmit()
    {
        bool success = await userService.InsertUserAsync(user);

        if (!success)
        {
            registrationFailed = true;
        }
        else
        {
            registrationFailed = false;
        }
    }
}